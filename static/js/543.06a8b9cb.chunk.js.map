{"version":3,"file":"static/js/543.06a8b9cb.chunk.js","mappings":"yQAsHA,UA7GA,WACE,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUZ,EAAoB,EAApBA,KAAMa,EAAc,EAAdA,MACtC,OAAQb,GACN,IAAK,OACH,OAAOC,EAAQY,GACjB,IAAK,QACH,OAAOV,EAASU,GAClB,IAAK,WACH,OAAOR,EAAYQ,GACrB,QACE,OAEL,EAwBD,OAAIP,GACK,SAAC,KAAD,CAAUQ,GAAG,eAIpB,kBACEC,MAAO,CACLC,MAAO,QACPC,QAAS,QACTC,YAAa,OACbC,WAAY,OACZC,UAAW,OACXC,aAAc,UAEhBC,SApCiB,SAAAC,GACnBA,EAAEC,iBACFC,QAAQC,IAAI1B,EAAME,EAAOE,GACzBK,GAASkB,EAAAA,EAAAA,IAAY,CAAE3B,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCwB,SACAC,MAAK,WACJ5B,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,IACAyB,OAAM,SAAAC,GAIL,MAHAC,EAAAA,GAAAA,MAAY,qDAAsD,CAChEC,SAAU,cAEN,IAAIC,MAAMH,EAAMI,QAEvB,GAIJ,EAOC,WAWE,UAAC,IAAD,CAAWC,GAAI,CAAEnB,QAAS,OAAQoB,cAAe,SAAUC,GAAI,QAA/D,UAAyE,QAEvE,SAAC,IAAD,CACEC,QAAQ,QACRC,KAAK,OACLxC,KAAK,OACLa,MAAOb,EACPyC,SAAU9B,QAId,UAAC,IAAD,CAAWyB,GAAI,CAAEnB,QAAS,OAAQoB,cAAe,SAAUC,GAAI,QAA/D,UAAyE,UAEvE,SAAC,IAAD,CACEC,QAAQ,QACRC,KAAK,QACLxC,KAAK,QACLa,MAAOX,EACPuC,SAAU9B,QAId,UAAC,IAAD,CAAWyB,GAAI,CAAEnB,QAAS,OAAQoB,cAAe,SAAUC,GAAI,QAA/D,UAAyE,YAEvE,SAAC,IAAD,CACEC,QAAQ,QACRC,KAAK,WACLxC,KAAK,WACLa,MAAOT,EACPqC,SAAU9B,QAId,SAAC,IAAD,CACEyB,GAAI,CACFM,OAAQ,OACRC,MAAO,OACPC,YAAa,OACb3B,QAAS,QACT4B,GAAI,OACJC,GAAI,QAENP,QAAQ,WACRC,KAAK,SAVP,SAWC,cAKN,C","sources":["pages/SignUp/SignUp.jsx"],"sourcesContent":["import { Button, FormLabel, Input } from '@mui/material';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { stateSelectorIsLoggedIn } from 'redux/auth/authSelector';\nimport { signUpThunk } from 'redux/auth/authThunk';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction SingUp() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isLoggedIn = useSelector(stateSelectorIsLoggedIn);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(name, email, password);\n    dispatch(signUpThunk({ name, email, password }))\n      .unwrap()\n      .then(() => {\n        setName('');\n        setEmail('');\n        setPassword('');\n      })\n      .catch(error => {\n        toast.error('You have entered incorrect data, please try again!', {\n          position: 'top-right',\n        });\n        throw new Error(error.message);\n    \n      });\n    // setName('');\n    // setEmail('');\n    // setPassword('');\n  };\n\n  if (isLoggedIn) {\n    return <Navigate to=\"/contacts\" />;\n  }\n\n  return (\n    <form\n      style={{\n        width: '500px',\n        display: 'block',\n        marginRight: 'auto',\n        marginLeft: 'auto',\n        marginTop: '30px',\n        alignContent: 'center',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <FormLabel sx={{ display: 'flex', flexDirection: 'column', mb: '30px' }}>\n        Name\n        <Input\n          variant=\"solid\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </FormLabel>\n\n      <FormLabel sx={{ display: 'flex', flexDirection: 'column', mb: '30px' }}>\n        E-mail\n        <Input\n          variant=\"solid\"\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n      </FormLabel>\n\n      <FormLabel sx={{ display: 'flex', flexDirection: 'column', mb: '30px' }}>\n        Password\n        <Input\n          variant=\"solid\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n      </FormLabel>\n\n      <Button\n        sx={{\n          margin: '10px',\n          color: 'gray',\n          borderColor: 'gray',\n          display: 'block',\n          mr: 'auto',\n          ml: 'auto',\n        }}\n        variant=\"outlined\"\n        type=\"submit\"\n      >\n        Sign Up\n      </Button>\n    </form>\n  );\n}\n\nexport default SingUp;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","isLoggedIn","useSelector","stateSelectorIsLoggedIn","dispatch","useDispatch","handleChange","target","value","to","style","width","display","marginRight","marginLeft","marginTop","alignContent","onSubmit","e","preventDefault","console","log","signUpThunk","unwrap","then","catch","error","toast","position","Error","message","sx","flexDirection","mb","variant","type","onChange","margin","color","borderColor","mr","ml"],"sourceRoot":""}